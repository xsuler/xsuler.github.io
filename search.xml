<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>IEC62443-1-1标准解读</title>
      <link href="/2018/10/26/IEC62443-1-1/"/>
      <url>/2018/10/26/IEC62443-1-1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">IEC62443-1-1: 中华人民共和国机械行业标准，工业通信网络，网络和系统安全，术语，概念和模型部分。<br>以下是对IEC62443-1-1内容的整理。<br><a id="more"></a><p></p><iframe src="http://www.xmind.net/embed/zQnm" width="90%" height="540px" frameborder="0" scrolling="no"></iframe></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> 工业通信网络 </tag>
            
            <tag> 标准解读 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Upload Image in Django</title>
      <link href="/2018/10/17/django-upload-image/"/>
      <url>/2018/10/17/django-upload-image/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">This post shows how to use ImageField to upload imasge in django.<br><a id="more"></a><br>To properly use it, you should store the image file in static folder, and record the path in database.<p></p><h2 id="model"><a href="#model" class="headerlink" title="model"></a>model</h2><p>The code below will modify the upload path and change the file name to a random string.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">on_upload</span><span class="params">(instance, name)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> os.path.join(<span class="string">'static/image/'</span>, uuid.uuid1().hex+<span class="string">'.'</span>+name.split(<span class="string">'.'</span>)[<span class="number">-1</span>])</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageUploader</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    image = models.ImageField(upload_to = on_upload)</span><br></pre></td></tr></table></figure><h2 id="view"><a href="#view" class="headerlink" title="view"></a>view</h2><p>let’s use django class view. First create a instance of the model, then save the image to disk. The view will return the proper path where static folder is served under <code>/</code>.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageUpload</span><span class="params">(ViewClass)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self)</span>:</span></span><br><span class="line">        img = ImageUploader.objects.create(image=self.request.POST[<span class="string">'image'</span>])</span><br><span class="line">        img.save()</span><br><span class="line">        <span class="keyword">return</span> settings.get_url()+img.image.url[<span class="number">7</span>:]</span><br></pre></td></tr></table></figure></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> django </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Initialize</title>
      <link href="/2018/10/12/Initialize/"/>
      <url>/2018/10/12/Initialize/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/css/lightgallery.min.css"><div class=".article-gallery" <p="">Every blog has to start somewhere.<br>Every thing starts from nothing. <p></p></div><script src="https://cdn.jsdelivr.net/lightgallery.js/1.0.1/js/lightgallery.min.js"></script><script>if (typeof lightGallery !== 'undefined') {        var options = {            selector: '.gallery-item'        };        lightGallery(document.getElementsByClassName('.article-gallery')[0], options);        }</script>]]></content>
      
      
      
        <tags>
            
            <tag> Nothing </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
